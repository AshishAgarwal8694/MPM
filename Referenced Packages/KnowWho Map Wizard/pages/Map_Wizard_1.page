<apex:page id="kwPage" controller="kwmw.KMAP_MapWizardController" tabStyle="KnowWho_Map_Wizard__tab">

<script type="text/javascript" src="/canvas/sdk/js/31.0/controller.js"></script>       
<script type="text/javascript" src="/soap/ajax/31.0/connection.js"/>
<apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"/>

 <script>
            var j$ = jQuery.noConflict();
            var availableHeight;
            // calculate distance from 0 y-axis top of available inner browser height to top left corner of iframe-containing div (use this instead of a fixed calculation point in case SF makes changes to toolbars/header CSS or design)                 
            var distanceToIframe;
            // calculate iframe height by subtracting top contents (SF header, our mapping logo/title, etc.) from available inner browser height, as well as an additional 10px to allow a small amount of whitespace to appear at the bottom under the map (for aesthetics)
            var iframeHeight;
            
</script>
         
<script>
         
         j$( document ).ready(function() {
                        
            // calculate available inner browser height (excluding browser toolbars, horizontal scrollbars, etc.)
            availableHeight = document.documentElement.clientHeight;
            // calculate distance from 0 y-axis top of available inner browser height to top left corner of iframe-containing div (use this instead of a fixed calculation point in case SF makes changes to toolbars/header CSS or design)                 
            var p = j$("#canvasDiv");
            var offset = p.offset();
            // calculate iframe height by subtracting top contents (SF header, our mapping logo/title, etc.) from available inner browser height, as well as an additional 5px to allow a small amount of whitespace to appear at the bottom under the map
            iframeHeight = availableHeight - offset.top - 5;
            
            if (iframeHeight <= 480) {
                iframeHeight = 480;
            }
            
            // set the height of the canvas iframe to our calculated height, so it always maximizes the available height (or 480px, whichever is greatest)
            j$("#canvasDiv").height(iframeHeight);
            p.show();
            
            });
                     
</script>

<apex:outputPanel id="sectionheader">
    <apex:sectionHeader help="{!sHelpURL}" title="KnowWho Map Wizard" subtitle="{!HeaderText}"/>
</apex:outputPanel>

<apex:outputPanel id="KWMAP" >
         <div id="canvasDiv">
        <apex:canvasApp rendered="{!showMapApp}" applicationName="KnowWho Map Wizard" namespacePrefix="kwmw" width="100%" height="100%" containerId="canvasDiv"    
                parameters="{mapType:'{!sType}',account:'{!sAccount}',contact:'{!sContact}', chamber:'{!sChamber}',state:'{!sState}',district:'{!sDistrictCode}'}" />
        </div>
</apex:outputPanel>


<script>

     Sfdc.canvas(function() {  
     Sfdc.canvas.controller.subscribe(
        { name : 'kwmw.sendVal', 
          onData : function (data) {
            var IDs = data.IDs;
            var ListType = data.ListType;
            var MapType = data.MapType;
            var MapFilters = data.MapFilters;
            var MapSaved = data.MapSaved;
            processMap(IDs,ListType,MapType,MapFilters,MapSaved);
          }
        });
     });                                         

</script>


<apex:form >
    <apex:actionFunction name="processMap" action="{!processMap}" reRender="cids,KWMAP,sectionheader">
        <apex:param name="cids" value="" assignTo="{!ContactIds}" />
        <apex:param name="listtype" value="" assignTo="{!ListType}" />
        <apex:param name="maptype" value="" assignTo="{!MapType}" />
        <apex:param name="mapfilters" value="" assignTo="{!MapFilters}" />
        <apex:param name="mapsaved" value="" assignTo="{!MapSaved}" />
    </apex:actionFunction>

    <apex:outputPanel id="cids">
        <apex:outputPanel id="campaigncreation" rendered="{!!showMapApp}">
            <apex:actionRegion >
                <apex:pageBlock >

                    <apex:pageMessage severity="info">
                        This list contains {!ContactCount} records. 
                        You will be able to remove unwanted individual records after you import the list to a campaign.
                    </apex:pageMessage>

                    <apex:pageMessage severity="info">
                        <apex:panelGrid columns="2">
                            <apex:outputLabel >List Type:</apex:outputLabel>
                            <apex:outputText value="{!ListType}"/>
                            <apex:outputLabel >Map Type:</apex:outputLabel>
                            <apex:outputText value="{!MapType}"/>
                            <apex:outputLabel >Map Filters:</apex:outputLabel>
                            <apex:outputText value="{!MapFilters}"/>
                            <apex:outputLabel >Map Saved?</apex:outputLabel>
                            <apex:outputText value="{!MapSaved}"/>
                        </apex:panelGrid>
                    </apex:pageMessage>

                </apex:pageBlock>
            </apex:actionRegion>

            <apex:actionRegion >
                <apex:pageBlock Title="Choose a Campaign" id="chooseCampaign">
                    <apex:pageMessages />
                    <apex:pageBlockButtons location="top">
    
                        <apex:actionStatus id="addtoCampaign">
                            <apex:facet name="stop">
                            <apex:commandButton action="{!kwcamp.addContactsToCampaign}" value="Add Contacts to Selected Campaign" status="addtoCampaign" reRender="chooseCampaign"/>
                             </apex:facet>
                             <apex:facet name="start">
                             <apex:outputPanel >
                                 <apex:image value="/img/loading32.gif" style="height: 15px;"/>
                                 <apex:commandButton value="Adding Contacts..." status="addtoCampaign" disabled="true"/>
                             </apex:outputPanel>
                             </apex:facet>
                        </apex:actionStatus>
        
                        <apex:commandButton action="{!kwcamp.createCampaign}" value="Create New Campaign" reRender="cids" rendered="{!kwcamp.bNewCampaignCreate}"/>
                        <apex:commandButton action="{!StartOver}" value="Start Over" immediate="TRUE"/>
    
                    </apex:pageBlockButtons>
    
                    <apex:pageBlockSection columns="1" >
                        <apex:pageBlockSectionItem helpText="See Help for this Page for details about how to import this list into an existing or new campaign.">
                            <apex:outputLabel >Select Existing Campaign</apex:outputLabel>
                            <apex:selectList size="1" value="{!kwcamp.SelectedCampaign}">
                                <apex:selectOptions value="{!kwcamp.CampaignList}"/>
                            </apex:selectList>
                        </apex:pageBlockSectionItem>
                    </apex:pageBlockSection>
                </apex:pageBlock>
            </apex:actionRegion>

            <apex:actionRegion >
                <apex:outputPanel id="newCampaignPanel">
                <apex:pageBlock id="newCampaignBlock" title="Create a New Campaign" Id="NewCampaignCreation" rendered="{!kwcamp.bNewCampaign}">
                    <apex:pageMessages />
                    <apex:pageBlockButtons location="top" >
                        <apex:actionStatus id="addtoNewCampaign">
                           <apex:facet name="stop">
                           <apex:commandButton action="{!kwcamp.CreateandAddCampaign}" value="Create and Add Contacts" reRender="newCampaignPanel" status="addtoNewCampaign"/>
                           </apex:facet>
                           <apex:facet name="start">
                               <apex:outputPanel >
                                   <apex:image value="/img/loading32.gif" style="height: 15px;"/>
                                   <apex:commandButton value="Adding Contacts..." status="addtoNewCampaign" disabled="true"/>
                               </apex:outputPanel>
                           </apex:facet>
                        </apex:actionStatus>
                        <apex:commandButton action="{!kwcamp.CancelCampaign}" value="Cancel" reRender="newCampaignPanel,chooseCampaign" immediate="true"/>
                    </apex:pageBlockButtons>

                    <apex:pageBlockSection id="newCampaignBlockpSection">
                        <apex:inputField id="newCampaignBlockNameField" value="{!kwcamp.newCampaign.Name}"/> 
                        <apex:repeat value="{!kwcamp.CampaignFields}" var="f">
                        <apex:inputField value="{!kwcamp.newCampaign[f.fieldPath]}"  required="{!OR(f.required, f.dbrequired)}"/> 
                        </apex:repeat>
                    </apex:pageBlockSection>
                </apex:pageBlock>

            </apex:OutputPanel>
        </apex:actionRegion>

    </apex:OutputPanel>
</apex:OutputPanel>


</apex:form>

</apex:page>